---
- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/aws.yml
  tasks:
    - name: EC2 group created
      ec2_group:
        name: "{{ ec2_security_group }}"
        description: "Basic Webserver Security Group"
        rules:
          - proto: tcp # SSH
            from_port: 22
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp # HTTP
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp # HTTPS
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0
    - name: EC2 instance created
      ec2:
        key_name: "{{ ec2_keypair }}"
        image: "{{ ec2_image }}"
        instance_type: "{{ ec2_instance_type }}"
        group: "{{ ec2_security_group }}"
        wait: True
        instance_tags:
          Name: "{{ ec2_instance_name }}"
        exact_count: 1
        count_tag:
          Name: "{{ ec2_instance_name }}"
      register: ec2_launch_output
    - name: EC2 hosts added to inventory
      copy:
        content: |
          [production]
          {% for instance in ec2_launch_output.tagged_instances %}
          {{ instance.public_dns_name }}
          {% endfor %}
        dest: "{{ output_dir }}/production"
    - name: EC2 hosts added to production hosts group
      add_host:
        hostname: "{{ item.public_dns_name }}"
        groupname: production
      with_items: "{{ ec2_launch_output.tagged_instances }}"
    - name: Wait for instances listening on port 22
      wait_for:
        state: started
        host: "{{ item.public_dns_name }}"
        port: 22
      with_items: "{{ ec2_launch_output.tagged_instances }}"
